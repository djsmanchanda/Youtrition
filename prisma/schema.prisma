// prisma/schema.prisma
//
// Switch to SQLite for a simple embedded DB.
// The file will appear at prisma/dev.db by default.

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        Int      @id @default(autoincrement())
  name      String
  persona   String?
  // New fields:
  dietaryRestrictions Json?     // array of strings
  allergies           Json?
  cuisinePreferences  Json?
  workoutFrequency    Int?
  workoutIntensity    Int?
  createdAt DateTime @default(now())

  pantry     Ingredient[]
  recipes    Recipe[]
}


model Ingredient {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Float?
  unit      String?
  expiresAt DateTime?
  // --- relations ---
  profile   Profile   @relation(fields: [profileId], references: [id])
  profileId Int
  recipe    Recipe?   @relation(fields: [recipeId], references: [id])
  recipeId  Int?
}

model Recipe {
  id           Int      @id @default(autoincrement())
  title        String
  cuisine      String? // "Mexican", "Thai", â€¦
  source       String   @default("seed") // "seed" | "gpt"
  instructions String
  cookTime     Int? // minutes
  dietaryInfo  String?
  nutrition    Json? // store the dict returned by nutrition API
  createdAt    DateTime @default(now())

  /// relation back to Profile -------------
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
  /// -----------------------------------------

  ingredients Ingredient[]
}
